{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","userItem","userId","undefined","TypeError","cn","completed","title","TodoList","todos","map","App","NEW_TODO","titlePattern","useState","todosFromServer","todoList","setTodoList","setTodo","hasTitleError","setHasTitleError","hasUserError","setHasUserError","handleChange","event","field","newTitle","test","target","value","prevTodo","action","method","onSubmit","preventDefault","newTodo","Math","max","trim","prevTodoList","concat","htmlFor","placeholder","type","onChange","e","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00c7431f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types';\nimport usersFromServer from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = usersFromServer.find((userItem) => userItem.id === todo.userId);\n\n  if (user === undefined) {\n    throw new TypeError('User not found');\n  }\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={user} />\n      <div>{todo.id}</div>\n    </article>\n  );\n};\n","import { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types';\n\nconst getNewId = (todos: Todo[]) => {\n  return Math.max(...todos.map((todo) => todo.id)) + 1;\n};\n\nexport const App = () => {\n  const NEW_TODO = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n  const titlePattern = /^[a-zA-Z0-9\\u0400-\\u04FF\\s]*$/;\n\n  const [todoList, setTodoList] = useState(todosFromServer);\n  const [todo, setTodo] = useState(NEW_TODO);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const onFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const newTodo = {\n      ...todo,\n      id: getNewId(todoList),\n      title: todo.title.trim(),\n    };\n\n    setHasTitleError(!newTodo.title);\n    setHasUserError(!newTodo.userId);\n\n    if (!newTodo.title || !newTodo.userId) {\n      return;\n    }\n\n    setTodoList((prevTodoList) => prevTodoList.concat(newTodo));\n    setTodo(NEW_TODO);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    field: string,\n  ) => {\n    switch (field) {\n      default:\n        return;\n      case 'title': {\n        const newTitle = titlePattern.test(event.target.value)\n          ? event.target.value\n          : todo.title;\n\n        setTodo((prevTodo) => ({\n          ...prevTodo,\n          title: newTitle,\n        }));\n        setHasTitleError(false);\n\n        return;\n      }\n\n      case 'userId': {\n        setTodo((prevTodo) => ({\n          ...prevTodo,\n          userId: +event.target.value,\n        }));\n        setHasUserError(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Enter a title: </label>\n          <input\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Please enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todo.title}\n            onChange={(e) => handleChange(e, 'title')}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">Choose a user: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={todo.userId}\n            onChange={(e) => handleChange(e, 'userId')}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}